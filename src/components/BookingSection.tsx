import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Calendar, Clock, Phone, User } from 'lucide-react';
import axios from 'axios';

const services = [
  '–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è',
  '–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ—é',
  '–ü–ª–∞–Ω–æ–≤–µ –¢–û',
  '–ü—ñ–¥–±—ñ—Ä –∑–∞–ø—á–∞—Å—Ç–∏–Ω',
  '–†–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ—ó',
  '–†–µ–º–æ–Ω—Ç –¥–≤–∏–≥—É–Ω–∞',
  '–†–µ–º–æ–Ω—Ç –≥–∞–ª—å–º—ñ–≤–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏',
  '–†–µ–º–æ–Ω—Ç —Ä—É–ª—å–æ–≤–æ—ó –≥—Ä—É–ø–∏',
  '–†–µ–º–æ–Ω—Ç —Ç—Ä–∞–Ω—Å–º—ñ—Å—ñ–π–Ω–æ—ó –≥—Ä—É–ø–∏',
  '–†–µ–º–æ–Ω—Ç –ø–∞–ª–∏–≤–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏',
  '–†–µ—Å—Ç–∞–≤—Ä–∞—Ü—ñ—è —Ç–∞ —Ä–µ–º–æ–Ω—Ç —Ç—É—Ä–±—ñ–Ω',
  '–†–µ–º–æ–Ω—Ç –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á —Ç–∞ –∑—á–µ–ø–ª–µ–Ω–Ω—è',
  '–ó–∞–º—ñ–Ω–∞ –º–∞—Å—Ç–∏–ª, —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ä–æ–±–æ—Ç–∏–∑–æ–≤–∞–Ω–∏—Ö –ö–ü–ü',
  '–ó–∞–º—ñ–Ω–∞ –º–∞—Å—Ç–∏–ª, —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ DSG —Ç–∞ Power Shift',
  '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂ —Ç–∞ –±–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è',
  '–ó–∞–º—ñ–Ω–∞ –≤–∏—Ç—Ä–∞—Ç–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ —Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤',
  '–î–µ—Ç–µ–π–ª—ñ–Ω–≥',
];

const BookingSection = () => {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    car: '',
    service: '',
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');

  const handleInputChange = (field: string, value: string) => {
    setFormData((prev) => ({ ...prev, [field]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSuccessMessage(''); // Clear previous success message

    try {
      const message = `
      –ù–æ–≤–∏–π –∑–∞–ø–∏—Å –Ω–∞ —Å–µ—Ä–≤—ñ—Å:

      üë§ –Ü–º'—è: ${formData.name}
      üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
      üöó –ê–≤—Ç–æ–º–æ–±—ñ–ª—å: ${formData.car || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
      ‚öôÔ∏è –ü–æ—Å–ª—É–≥–∞: ${formData.service || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
    `;

      const TELEGRAM_BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN;
      const TELEGRAM_CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID;

      if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
        throw new Error('Telegram Bot Token –∏–ª–∏ Chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env');
      }

      const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;

      const response = await axios.post(telegramUrl, {
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
      });

      setSuccessMessage("–î—è–∫—É—î–º–æ, —â–æ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.");
      setFormData({ name: '', phone: '', car: '', service: '' });
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–∏—Ö:', error);
      alert('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section id='booking' className='py-20 bg-gradient-to-br from-surface-light to-surface-neutral'>
      <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
        <div className='text-center mb-16'>
          <h2 className='text-4xl md:text-5xl font-bold text-text-dark mb-6'>–û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å</h2>
          <p className='text-xl text-text-light max-w-3xl mx-auto'>
            –ó–∞–±—Ä–æ–Ω—é–π—Ç–µ –∑—Ä—É—á–Ω–∏–π —á–∞—Å –¥–ª—è –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –≤–∞—à–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
          </p>
        </div>

        <div className='max-w-2xl mx-auto'>
          <Card className='border-0 shadow-card'>
            <CardHeader className='text-center bg-gradient-hero text-white rounded-t-lg'>
              <CardTitle className='text-2xl font-bold'>–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Å–µ—Ä–≤—ñ—Å</CardTitle>
              <CardDescription className='text-white/90'>
                –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –º–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
              </CardDescription>
            </CardHeader>
            <CardContent className='p-8'>
              <form onSubmit={handleSubmit} className='space-y-6'>
                <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>
                  <div className='space-y-2'>
                    <Label
                      htmlFor='name'
                      className='text-text-dark font-semibold flex items-center gap-2'>
                      <User className='h-4 w-4' />
                      –Ü–º'—è *
                    </Label>
                    <Input
                      id='name'
                      placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è"
                      value={formData.name}
                      onChange={(e) => handleInputChange('name', e.target.value)}
                      required
                      className='border-2 border-border focus:border-brand-blue'
                    />
                  </div>

                  <div className='space-y-2'>
                    <Label
                      htmlFor='phone'
                      className='text-text-dark font-semibold flex items-center gap-2'>
                      <Phone className='h-4 w-4' />
                      –¢–µ–ª–µ—Ñ–æ–Ω *
                    </Label>
                    <Input
                      id='phone'
                      type='tel'
                      placeholder='+380 (XX) XXX-XX-XX'
                      value={formData.phone}
                      onChange={(e) => handleInputChange('phone', e.target.value)}
                      required
                      className='border-2 border-border focus:border-brand-blue'
                    />
                  </div>
                </div>

                <div className='space-y-2'>
                  <Label htmlFor='car' className='text-text-dark font-semibold'>
                    –ú–∞—Ä–∫–∞/–º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
                  </Label>
                  <Input
                    id='car'
                    placeholder='–ù–∞–ø—Ä–∏–∫–ª–∞–¥: Toyota Camry 2018'
                    value={formData.car}
                    onChange={(e) => handleInputChange('car', e.target.value)}
                    className='border-2 border-border focus:border-brand-blue'
                  />
                </div>

                <div className='space-y-2'>
                  <Label htmlFor='service' className='text-text-dark font-semibold'>
                    –ü–æ—Å–ª—É–≥–∞
                  </Label>
                  <Select onValueChange={(value) => handleInputChange('service', value)}>
                    <SelectTrigger className='border-2 border-border focus:border-brand-blue'>
                      <SelectValue placeholder='–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É' />
                    </SelectTrigger>
                    <SelectContent>
                      {services.map((service, index) => (
                        <SelectItem key={index} value={service}>
                          {service}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className='space-y-4'>
                  <Button
                    type='submit'
                    variant='hero'
                    size='lg'
                    className='w-full text-lg py-6'
                    disabled={isSubmitting}>
                    {isSubmitting ? '–í—ñ–¥–ø—Ä–∞–≤–∫–∞...' : '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è'}
                  </Button>
                  {successMessage && (
                    <p className='text-left text-brand-blue text-lg'>{successMessage}</p>
                  )}
                </div>
              </form>

              <div className='mt-8 p-6 bg-surface-light rounded-xl'>
                <div className='flex items-center gap-2 text-text-dark font-semibold mb-2'>
                  <Clock className='h-5 w-5 text-brand-blue' />
                  –©–æ –¥–∞–ª—ñ?
                </div>
                <p className='text-text-light'>
                  –ü—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º 15 —Ö–≤–∏–ª–∏–Ω –¥–ª—è
                  –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É —Ç–∞ —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};

export default BookingSection;
